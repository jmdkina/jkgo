// Code generated by protoc-gen-go.
// source: protocol.proto
// DO NOT EDIT!

/*
Package jkprotobuf is a generated protocol buffer package.

It is generated from these files:
	protocol.proto

It has these top-level messages:
	Update
	Netconfig
	Selfresponse
	SelfresponseAll
	Serverinfo
	Stat3GPer
	Stat3G
	FlowsumPer
	Flowsum
	ModuleStatPer
	ModuleStat
	MCSystemFunc
*/
package jkprotobuf

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// ddd解决速度
type Update struct {
	State *int32 `protobuf:"varint,1,req,name=state" json:"state,omitempty"`
	// 1 dev is busy
	// 2 nand file
	// 3 fail to update
	Value            *int32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Info             *string `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Update) Reset()         { *m = Update{} }
func (m *Update) String() string { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()    {}

func (m *Update) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *Update) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *Update) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

type Netconfig struct {
	Ip               *string `protobuf:"bytes,1,req,name=ip" json:"ip,omitempty"`
	Netmask          *string `protobuf:"bytes,2,req,name=netmask" json:"netmask,omitempty"`
	Gateway          *string `protobuf:"bytes,3,req,name=gateway" json:"gateway,omitempty"`
	State            *int32  `protobuf:"varint,4,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Netconfig) Reset()         { *m = Netconfig{} }
func (m *Netconfig) String() string { return proto.CompactTextString(m) }
func (*Netconfig) ProtoMessage()    {}

func (m *Netconfig) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Netconfig) GetNetmask() string {
	if m != nil && m.Netmask != nil {
		return *m.Netmask
	}
	return ""
}

func (m *Netconfig) GetGateway() string {
	if m != nil && m.Gateway != nil {
		return *m.Gateway
	}
	return ""
}

func (m *Netconfig) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

type Selfresponse struct {
	Mac              *string `protobuf:"bytes,1,req,name=mac" json:"mac,omitempty"`
	Ip               *string `protobuf:"bytes,2,req,name=ip" json:"ip,omitempty"`
	Netmask          *string `protobuf:"bytes,3,req,name=netmask" json:"netmask,omitempty"`
	Gateway          *string `protobuf:"bytes,4,req,name=gateway" json:"gateway,omitempty"`
	SWversion        *string `protobuf:"bytes,5,req" json:"SWversion,omitempty"`
	HWversion        *string `protobuf:"bytes,6,req" json:"HWversion,omitempty"`
	Uptime           *string `protobuf:"bytes,7,opt,name=uptime" json:"uptime,omitempty"`
	Firmware         *string `protobuf:"bytes,8,opt,name=firmware" json:"firmware,omitempty"`
	Name             *string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Selfresponse) Reset()         { *m = Selfresponse{} }
func (m *Selfresponse) String() string { return proto.CompactTextString(m) }
func (*Selfresponse) ProtoMessage()    {}

func (m *Selfresponse) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *Selfresponse) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Selfresponse) GetNetmask() string {
	if m != nil && m.Netmask != nil {
		return *m.Netmask
	}
	return ""
}

func (m *Selfresponse) GetGateway() string {
	if m != nil && m.Gateway != nil {
		return *m.Gateway
	}
	return ""
}

func (m *Selfresponse) GetSWversion() string {
	if m != nil && m.SWversion != nil {
		return *m.SWversion
	}
	return ""
}

func (m *Selfresponse) GetHWversion() string {
	if m != nil && m.HWversion != nil {
		return *m.HWversion
	}
	return ""
}

func (m *Selfresponse) GetUptime() string {
	if m != nil && m.Uptime != nil {
		return *m.Uptime
	}
	return ""
}

func (m *Selfresponse) GetFirmware() string {
	if m != nil && m.Firmware != nil {
		return *m.Firmware
	}
	return ""
}

func (m *Selfresponse) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type SelfresponseAll struct {
	SzSelfresponse   []*Selfresponse `protobuf:"bytes,1,rep,name=szSelfresponse" json:"szSelfresponse,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SelfresponseAll) Reset()         { *m = SelfresponseAll{} }
func (m *SelfresponseAll) String() string { return proto.CompactTextString(m) }
func (*SelfresponseAll) ProtoMessage()    {}

func (m *SelfresponseAll) GetSzSelfresponse() []*Selfresponse {
	if m != nil {
		return m.SzSelfresponse
	}
	return nil
}

type Serverinfo struct {
	Server           *string `protobuf:"bytes,1,req,name=server" json:"server,omitempty"`
	Port             *int32  `protobuf:"varint,2,req,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Serverinfo) Reset()         { *m = Serverinfo{} }
func (m *Serverinfo) String() string { return proto.CompactTextString(m) }
func (*Serverinfo) ProtoMessage()    {}

func (m *Serverinfo) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *Serverinfo) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type Stat3GPer struct {
	Number    *int32  `protobuf:"varint,1,req,name=number" json:"number,omitempty"`
	Modelname *string `protobuf:"bytes,10,opt,name=modelname" json:"modelname,omitempty"`
	Type      *int32  `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Stat      *int32  `protobuf:"varint,3,opt,name=stat" json:"stat,omitempty"`
	// 2-SMS		正在等待短信
	// 3-RECVSMS	读取到一条短消息
	// 4-ATERR	模块测试失败
	// 5-DIALING	拨号中/WIFI联接中
	// 6-ONLINE	成功拨号
	// 7-RESET	模块复位中
	// 8-KILLING	用户手动停止
	// 9-DISC		断开/失败
	// 10-NOAP	没有找到AP(仅WIFI是有效)
	Signal1 *int32 `protobuf:"varint,4,opt,name=signal1" json:"signal1,omitempty"`
	// 0…31,99	不确定		CDMA/WCDMA
	// 0/20/40/60/80/99		EVDO
	// 0…31,99	不确定		TD-GSM
	// 100…191,199不确定		TD-SCDMA
	// 0…100					WIFI
	Signal2 *int32 `protobuf:"varint,5,opt,name=signal2" json:"signal2,omitempty"`
	Simcard *int32 `protobuf:"varint,6,opt,name=simcard" json:"simcard,omitempty"`
	// 1：SIMC卡OK
	// 255：SIMC卡不存在
	Cdmasignal1      *int32 `protobuf:"varint,7,opt,name=cdmasignal1" json:"cdmasignal1,omitempty"`
	Cdmasignal2      *int32 `protobuf:"varint,8,opt,name=cdmasignal2" json:"cdmasignal2,omitempty"`
	Speed            *int32 `protobuf:"varint,9,opt,name=speed" json:"speed,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Stat3GPer) Reset()         { *m = Stat3GPer{} }
func (m *Stat3GPer) String() string { return proto.CompactTextString(m) }
func (*Stat3GPer) ProtoMessage()    {}

func (m *Stat3GPer) GetNumber() int32 {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return 0
}

func (m *Stat3GPer) GetModelname() string {
	if m != nil && m.Modelname != nil {
		return *m.Modelname
	}
	return ""
}

func (m *Stat3GPer) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Stat3GPer) GetStat() int32 {
	if m != nil && m.Stat != nil {
		return *m.Stat
	}
	return 0
}

func (m *Stat3GPer) GetSignal1() int32 {
	if m != nil && m.Signal1 != nil {
		return *m.Signal1
	}
	return 0
}

func (m *Stat3GPer) GetSignal2() int32 {
	if m != nil && m.Signal2 != nil {
		return *m.Signal2
	}
	return 0
}

func (m *Stat3GPer) GetSimcard() int32 {
	if m != nil && m.Simcard != nil {
		return *m.Simcard
	}
	return 0
}

func (m *Stat3GPer) GetCdmasignal1() int32 {
	if m != nil && m.Cdmasignal1 != nil {
		return *m.Cdmasignal1
	}
	return 0
}

func (m *Stat3GPer) GetCdmasignal2() int32 {
	if m != nil && m.Cdmasignal2 != nil {
		return *m.Cdmasignal2
	}
	return 0
}

func (m *Stat3GPer) GetSpeed() int32 {
	if m != nil && m.Speed != nil {
		return *m.Speed
	}
	return 0
}

type Stat3G struct {
	Count            *int32       `protobuf:"varint,1,req,name=count" json:"count,omitempty"`
	Stat3GPer        []*Stat3GPer `protobuf:"bytes,2,rep,name=stat3g_per" json:"stat3g_per,omitempty"`
	Cablespeed       *int32       `protobuf:"varint,3,opt,name=cablespeed" json:"cablespeed,omitempty"`
	Intervaltime     *int32       `protobuf:"varint,4,opt,name=intervaltime" json:"intervaltime,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Stat3G) Reset()         { *m = Stat3G{} }
func (m *Stat3G) String() string { return proto.CompactTextString(m) }
func (*Stat3G) ProtoMessage()    {}

func (m *Stat3G) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *Stat3G) GetStat3GPer() []*Stat3GPer {
	if m != nil {
		return m.Stat3GPer
	}
	return nil
}

func (m *Stat3G) GetCablespeed() int32 {
	if m != nil && m.Cablespeed != nil {
		return *m.Cablespeed
	}
	return 0
}

func (m *Stat3G) GetIntervaltime() int32 {
	if m != nil && m.Intervaltime != nil {
		return *m.Intervaltime
	}
	return 0
}

type FlowsumPer struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Send             *int64 `protobuf:"varint,2,req,name=send" json:"send,omitempty"`
	Recv             *int64 `protobuf:"varint,3,req,name=recv" json:"recv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FlowsumPer) Reset()         { *m = FlowsumPer{} }
func (m *FlowsumPer) String() string { return proto.CompactTextString(m) }
func (*FlowsumPer) ProtoMessage()    {}

func (m *FlowsumPer) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FlowsumPer) GetSend() int64 {
	if m != nil && m.Send != nil {
		return *m.Send
	}
	return 0
}

func (m *FlowsumPer) GetRecv() int64 {
	if m != nil && m.Recv != nil {
		return *m.Recv
	}
	return 0
}

type Flowsum struct {
	FlowsumPer       []*FlowsumPer `protobuf:"bytes,1,rep,name=flowsum_per" json:"flowsum_per,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Flowsum) Reset()         { *m = Flowsum{} }
func (m *Flowsum) String() string { return proto.CompactTextString(m) }
func (*Flowsum) ProtoMessage()    {}

func (m *Flowsum) GetFlowsumPer() []*FlowsumPer {
	if m != nil {
		return m.FlowsumPer
	}
	return nil
}

type ModuleStatPer struct {
	Slot             *int32 `protobuf:"varint,1,req,name=slot" json:"slot,omitempty"`
	Stat             *int32 `protobuf:"varint,2,req,name=stat" json:"stat,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ModuleStatPer) Reset()         { *m = ModuleStatPer{} }
func (m *ModuleStatPer) String() string { return proto.CompactTextString(m) }
func (*ModuleStatPer) ProtoMessage()    {}

func (m *ModuleStatPer) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *ModuleStatPer) GetStat() int32 {
	if m != nil && m.Stat != nil {
		return *m.Stat
	}
	return 0
}

type ModuleStat struct {
	ModuleStatPer    []*ModuleStatPer `protobuf:"bytes,1,rep,name=module_stat_per" json:"module_stat_per,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ModuleStat) Reset()         { *m = ModuleStat{} }
func (m *ModuleStat) String() string { return proto.CompactTextString(m) }
func (*ModuleStat) ProtoMessage()    {}

func (m *ModuleStat) GetModuleStatPer() []*ModuleStatPer {
	if m != nil {
		return m.ModuleStatPer
	}
	return nil
}

type MCSystemFunc struct {
	IRoute           *uint32 `protobuf:"varint,1,opt,name=iRoute" json:"iRoute,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MCSystemFunc) Reset()         { *m = MCSystemFunc{} }
func (m *MCSystemFunc) String() string { return proto.CompactTextString(m) }
func (*MCSystemFunc) ProtoMessage()    {}

func (m *MCSystemFunc) GetIRoute() uint32 {
	if m != nil && m.IRoute != nil {
		return *m.IRoute
	}
	return 0
}

func init() {
}
